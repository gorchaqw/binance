// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	url "net/url"

	mock "github.com/stretchr/testify/mock"
)

// ClientCtrl is an autogenerated mock type for the ClientCtrl type
type ClientCtrl struct {
	mock.Mock
}

// Send provides a mock function with given fields: method, _a1, body, useApiKey
func (_m *ClientCtrl) Send(method string, _a1 *url.URL, body []byte, useApiKey bool) ([]byte, error) {
	ret := _m.Called(method, _a1, body, useApiKey)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, *url.URL, []byte, bool) []byte); ok {
		r0 = rf(method, _a1, body, useApiKey)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *url.URL, []byte, bool) error); ok {
		r1 = rf(method, _a1, body, useApiKey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewClientCtrl interface {
	mock.TestingT
	Cleanup(func())
}

// NewClientCtrl creates a new instance of ClientCtrl. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClientCtrl(t mockConstructorTestingTNewClientCtrl) *ClientCtrl {
	mock := &ClientCtrl{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
