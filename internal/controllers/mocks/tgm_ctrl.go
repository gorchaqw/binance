// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	mock "github.com/stretchr/testify/mock"
)

// TgmCtrl is an autogenerated mock type for the TgmCtrl type
type TgmCtrl struct {
	mock.Mock
}

// CheckChatID provides a mock function with given fields: chatID
func (_m *TgmCtrl) CheckChatID(chatID int64) bool {
	ret := _m.Called(chatID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(int64) bool); ok {
		r0 = rf(chatID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetUpdates provides a mock function with given fields:
func (_m *TgmCtrl) GetUpdates() tgbotapi.UpdatesChannel {
	ret := _m.Called()

	var r0 tgbotapi.UpdatesChannel
	if rf, ok := ret.Get(0).(func() tgbotapi.UpdatesChannel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(tgbotapi.UpdatesChannel)
		}
	}

	return r0
}

// Send provides a mock function with given fields: text
func (_m *TgmCtrl) Send(text string) error {
	ret := _m.Called(text)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(text)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: msgID, text
func (_m *TgmCtrl) Update(msgID int, text string) error {
	ret := _m.Called(msgID, text)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, string) error); ok {
		r0 = rf(msgID, text)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTgmCtrl interface {
	mock.TestingT
	Cleanup(func())
}

// NewTgmCtrl creates a new instance of TgmCtrl. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTgmCtrl(t mockConstructorTestingTNewTgmCtrl) *TgmCtrl {
	mock := &TgmCtrl{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
